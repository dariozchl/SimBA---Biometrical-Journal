library(tidyverse)
library(future)
library(future.apply)
library(furrr)
library(rstan)
library(emmeans)
library(multcomp)
library(ggpubr)
library(ggh4x)
# load functions
source("sample_data.R")
source("find_best_comparison.R")
source("estimate_effect.R")
source("get_data.R")
source("simulation_wrapper.R")
# set up simulation
source("simulation_setup.R")
# run simulation (takes approximately 10 hours on Intel i7 11700k with 15 cores)
source("run_simulation.R")
data
source("simulation_setup_supplementary_material.R")
# run simulation for supplementary material (takes approximately 6 hours on Intel i7 11700k with 15 cores)
# source("run_simulation.R")
# load data (optional instead of running simulation)
main_data <- readRDS("data/simulated_data_2025-08-20.Rds")
suppl_data <- readRDS("data/simulated_data_supplementary_material_2025-08-22.Rds")
source("simulation_setup_supplementary_material.R")
# run simulation for supplementary material (takes approximately 6 hours on Intel i7 11700k with 15 cores)
source("run_simulation.R")
nsim
nsim <- 10
# run simulation for supplementary material (takes approximately 6 hours on Intel i7 11700k with 15 cores)
source("run_simulation_supplementary_material.R")
main_data <- data
main_data <- main_data %>%
mutate(delta = case_when(dsg == "bayes" ~ 0.5,
TRUE ~ as.numeric(NA)))
data_supplementary_material$delta <- rep(param_grid_suppl$delta, each = nsim)
data <- bind_rows(data_supplementary_material, main_data)
data
data <- data %>% mutate(dsg = factor(dsg,
levels = c("standard", "repeat_and_pool",
"repeat_and_replace", "bayes"))) %>%
rowwise() %>%
mutate(squared_error = diff(c(true_effect, effect_est))^2)
# create Figure 9
ploteff0 <- data %>% filter(true_effect == 0 & distribution == "normal" & dsg == "bayes") %>%
group_by(delta, no_groups, n_per_group, distribution, type_of_comparison, true_effect) %>%
summarise(MSE = mean(squared_error)) %>%
ggplot(.) + geom_point(aes(x = no_groups, y = MSE), size = 1) +
facet_nested(n_per_group ~ delta) +
expand_limits(y=0) +
theme_bw() + ggtitle("True largest effect: d = 0") + xlab("Number of groups")
ploteff1 <- data %>% filter(true_effect == 1 & distribution == "normal" & dsg == "bayes") %>%
group_by(delta, no_groups, n_per_group, distribution, type_of_comparison, true_effect) %>%
summarise(MSE = mean(squared_error)) %>%
ggplot(.) + geom_point(aes(x = no_groups, y = MSE), size = 1) +
facet_nested(n_per_group ~ delta , labeller = scenario_labeller) +
expand_limits(y=0) +
theme_bw() + ggtitle("True largest effect: d = 1") + xlab("Number of groups")
ploteff2 <- data %>% filter(true_effect == 2 & distribution == "normal" & dsg == "bayes") %>%
group_by(delta, no_groups, n_per_group, distribution, type_of_comparison, true_effect) %>%
summarise(MSE = mean(squared_error)) %>%
ggplot(.) + geom_point(aes(x = no_groups, y = MSE), size = 1) +
facet_nested(n_per_group ~ delta , labeller = scenario_labeller) +
expand_limits(y=0) +
theme_bw() + ggtitle("True largest effect: d = 2") + xlab("Number of groups")
ggarrange(ploteff0, ploteff1, ploteff2, ncol=1)
scenario_labeller <- labeller(`dsg` = c(`repeat_and_pool` = "Repeat and pool",
`repeat_and_replace` = "Repeat and replace",
`standard` = "Standard",
`bayes` = "Bayesian robust mixture"),
`n_per_group` = c(`6` = "n = 6",
`12` = "n = 12",
`18` = "n = 18"),
`true_effect` = c(`0` = "d = 0", `1` = "d = 1", `2` = "d = 2"))
# create Figure 9
ploteff0 <- data %>% filter(true_effect == 0 & distribution == "normal" & dsg == "bayes") %>%
group_by(delta, no_groups, n_per_group, distribution, type_of_comparison, true_effect) %>%
summarise(MSE = mean(squared_error)) %>%
ggplot(.) + geom_point(aes(x = no_groups, y = MSE), size = 1) +
facet_nested(n_per_group ~ delta) +
expand_limits(y=0) +
theme_bw() + ggtitle("True largest effect: d = 0") + xlab("Number of groups")
ploteff1 <- data %>% filter(true_effect == 1 & distribution == "normal" & dsg == "bayes") %>%
group_by(delta, no_groups, n_per_group, distribution, type_of_comparison, true_effect) %>%
summarise(MSE = mean(squared_error)) %>%
ggplot(.) + geom_point(aes(x = no_groups, y = MSE), size = 1) +
facet_nested(n_per_group ~ delta , labeller = scenario_labeller) +
expand_limits(y=0) +
theme_bw() + ggtitle("True largest effect: d = 1") + xlab("Number of groups")
ploteff2 <- data %>% filter(true_effect == 2 & distribution == "normal" & dsg == "bayes") %>%
group_by(delta, no_groups, n_per_group, distribution, type_of_comparison, true_effect) %>%
summarise(MSE = mean(squared_error)) %>%
ggplot(.) + geom_point(aes(x = no_groups, y = MSE), size = 1) +
facet_nested(n_per_group ~ delta , labeller = scenario_labeller) +
expand_limits(y=0) +
theme_bw() + ggtitle("True largest effect: d = 2") + xlab("Number of groups")
ggarrange(ploteff0, ploteff1, ploteff2, ncol=1)
# for each n_per_group, the MSE should be calculated as percentage from the MSE of dsg=="standard design" and no_groups==2
plot1 <- data %>% filter(true_effect == 1, distribution == "normal" & type_of_comparison == "all_pairwise" & dsg != "resampled_shrinkage") %>%
group_by(dsg, no_groups, n_per_group, distribution, type_of_comparison) %>%
summarise(MSE = mean(squared_error)) %>%
ungroup() %>% group_by(n_per_group) %>%
mutate(MSE_ref = MSE/MSE[dsg=="standard" & no_groups==2]) %>%
mutate(ampelfarbe = case_when(MSE_ref <= MSE_ref[dsg=="standard" & no_groups==2]*1.05~ "green",
MSE_ref <= MSE_ref[dsg=="standard" & no_groups==3]*1.05 ~ "yellow",
TRUE ~ "red"),
dsg = factor(dsg, levels = c("standard", "repeat_and_pool", "repeat_and_replace", "bayes"))) %>%
ggplot(.) + geom_point(aes(x = no_groups, y = MSE_ref)) +
geom_rect(aes(xmin = no_groups-0.499, xmax = no_groups+0.501, ymin=0, ymax=Inf, fill = ampelfarbe), alpha = 0.5) +
facet_grid(n_per_group ~ dsg, labeller = scenario_labeller) +
scale_fill_manual(values = c("#009e73", "#f0e442", "#d55e00"), breaks = c("green", "yellow", "red"), guide="none") +
scale_x_continuous(breaks = 2:10) + xlab("Number of groups") + ylab("MSE (relative to reference design)") +
theme_bw() + theme(panel.grid.minor = element_blank(), axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10)) +
ggtitle("Traffic light system under alternative hypothesis d = 1")
plot1
plot2 <- data %>% filter(true_effect == 2, distribution == "normal" & type_of_comparison == "all_pairwise" & dsg != "resampled_shrinkage") %>%
group_by(dsg, no_groups, n_per_group, distribution, type_of_comparison) %>%
summarise(MSE = mean(squared_error)) %>%
ungroup() %>% group_by(n_per_group) %>%
mutate(MSE_ref = MSE/MSE[dsg=="standard" & no_groups==2]) %>%
mutate(ampelfarbe = case_when(MSE_ref <= MSE_ref[dsg=="standard" & no_groups==2]*1.05~ "green",
MSE_ref <= MSE_ref[dsg=="standard" & no_groups==3]*1.05 ~ "yellow",
TRUE ~ "red"),
dsg = factor(dsg, levels = c("standard", "repeat_and_pool", "repeat_and_replace", "bayes"))) %>%
ggplot(.) + geom_point(aes(x = no_groups, y = MSE_ref)) +
geom_rect(aes(xmin = no_groups-0.499, xmax = no_groups+0.501, ymin=0, ymax=Inf, fill = ampelfarbe), alpha = 0.5) +
facet_grid(n_per_group ~ dsg, labeller = scenario_labeller) +
scale_fill_manual(values = c("#009e73", "#f0e442", "#d55e00"), breaks = c("green", "yellow", "red"), guide="none") +
scale_x_continuous(breaks = 2:10) + xlab("Number of groups") + ylab("MSE (relative to reference design)") +
theme_bw() + theme(panel.grid.minor = element_blank(), axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10)) +
ggtitle("Traffic light system under alternative hypothesis d = 2")
plot2
library(tidyverse)
library(future)
library(future.apply)
library(furrr)
library(rstan)
library(emmeans)
library(multcomp)
library(ggpubr)
library(ggh4x)
# load functions
source("sample_data.R")
source("find_best_comparison.R")
source("estimate_effect.R")
source("get_data.R")
source("simulation_wrapper.R")
main_data <- readRDS("data/simulated_data_2025-08-20.Rds")
data_supplementary_material <- readRDS("data/simulated_data_supplementary_material_2025-08-22.Rds")
main_data$dsg
main_data$omega <- ifelse(main_data$dsg == "bayes", 0.5, NA)
data_supplementary_material$omega <- rep(param_grid_suppl$omega, each = nsim)
# set up simulation for supplementary material
source("simulation_setup_supplementary_material.R")
data_supplementary_material$omega <- rep(param_grid_suppl$omega, each = nsim)
main_data <- data
main_data$delta <- ifelse(main_data$dsg == "bayes", 0.5, NA)
data_supplementary_material$delta <- rep(param_grid_suppl$delta, each = nsim)
data <- bind_rows(data_supplementary_material, main_data)
data <- data %>% mutate(dsg = factor(dsg,
levels = c("standard", "repeat_and_pool",
"repeat_and_replace", "bayes"))) %>%
rowwise() %>%
mutate(squared_error = diff(c(true_effect, effect_est))^2)
scenario_labeller <- labeller(`dsg` = c(`repeat_and_pool` = "Repeat and pool",
`repeat_and_replace` = "Repeat and replace",
`standard` = "Standard",
`bayes` = "Bayesian robust mixture"),
`n_per_group` = c(`6` = "n = 6",
`12` = "n = 12",
`18` = "n = 18"),
`true_effect` = c(`0` = "d = 0", `1` = "d = 1", `2` = "d = 2"),
`delta` = c(`0.25` = "omega = 0.25", `0.5` = "omega = 0.5", `0.75` = "omega = 0.75"))
# create Figure 9
ploteff0 <- data %>% filter(true_effect == 0 & distribution == "normal" & dsg == "bayes") %>%
group_by(delta, no_groups, n_per_group, distribution, type_of_comparison, true_effect) %>%
summarise(MSE = mean(squared_error)) %>%
ggplot(.) + geom_point(aes(x = no_groups, y = MSE), size = 1) +
facet_nested(n_per_group ~ delta, labeller = scenario_labeller) +
expand_limits(y=0) +
theme_bw() + ggtitle("True largest effect: d = 0") + xlab("Number of groups")
ploteff1 <- data %>% filter(true_effect == 1 & distribution == "normal" & dsg == "bayes") %>%
group_by(delta, no_groups, n_per_group, distribution, type_of_comparison, true_effect) %>%
summarise(MSE = mean(squared_error)) %>%
ggplot(.) + geom_point(aes(x = no_groups, y = MSE), size = 1) +
facet_nested(n_per_group ~ delta, labeller = scenario_labeller) +
expand_limits(y=0) +
theme_bw() + ggtitle("True largest effect: d = 1") + xlab("Number of groups")
ploteff2 <- data %>% filter(true_effect == 2 & distribution == "normal" & dsg == "bayes") %>%
group_by(delta, no_groups, n_per_group, distribution, type_of_comparison, true_effect) %>%
summarise(MSE = mean(squared_error)) %>%
ggplot(.) + geom_point(aes(x = no_groups, y = MSE), size = 1) +
facet_nested(n_per_group ~ delta, labeller = scenario_labeller) +
expand_limits(y=0) +
theme_bw() + ggtitle("True largest effect: d = 2") + xlab("Number of groups")
ggarrange(ploteff0, ploteff1, ploteff2, ncol=1)
main_data <- data
main_data$delta <- ifelse(main_data$dsg == "bayes", 0.5, NA)
main_data$dsg
main_data
# load data (optional instead of running simulation)
data <- readRDS("data/simulated_data_2025-08-20.Rds")
# load data (optional instead of running simulation)
main_data <- readRDS("data/simulated_data_2025-08-20.Rds")
data_supplementary_material <- readRDS("data/simulated_data_supplementary_material_2025-08-22.Rds")
main_data <- data
main_data$delta <- ifelse(main_data$dsg == "bayes", 0.5, NA)
data_supplementary_material$delta <- rep(param_grid_suppl$delta, each = nsim)
data <- bind_rows(data_supplementary_material, main_data)
data <- data %>% mutate(dsg = factor(dsg,
levels = c("standard", "repeat_and_pool",
"repeat_and_replace", "bayes"))) %>%
rowwise() %>%
mutate(squared_error = diff(c(true_effect, effect_est))^2)
scenario_labeller <- labeller(`dsg` = c(`repeat_and_pool` = "Repeat and pool",
`repeat_and_replace` = "Repeat and replace",
`standard` = "Standard",
`bayes` = "Bayesian robust mixture"),
`n_per_group` = c(`6` = "n = 6",
`12` = "n = 12",
`18` = "n = 18"),
`true_effect` = c(`0` = "d = 0", `1` = "d = 1", `2` = "d = 2"),
`delta` = c(`0.25` = "omega = 0.25", `0.5` = "omega = 0.5", `0.75` = "omega = 0.75"))
# create Figure 9
ploteff0 <- data %>% filter(true_effect == 0 & distribution == "normal" & dsg == "bayes") %>%
group_by(delta, no_groups, n_per_group, distribution, type_of_comparison, true_effect) %>%
summarise(MSE = mean(squared_error)) %>%
ggplot(.) + geom_point(aes(x = no_groups, y = MSE), size = 1) +
facet_nested(n_per_group ~ delta, labeller = scenario_labeller) +
expand_limits(y=0) +
theme_bw() + ggtitle("True largest effect: d = 0") + xlab("Number of groups")
ploteff1 <- data %>% filter(true_effect == 1 & distribution == "normal" & dsg == "bayes") %>%
group_by(delta, no_groups, n_per_group, distribution, type_of_comparison, true_effect) %>%
summarise(MSE = mean(squared_error)) %>%
ggplot(.) + geom_point(aes(x = no_groups, y = MSE), size = 1) +
facet_nested(n_per_group ~ delta, labeller = scenario_labeller) +
expand_limits(y=0) +
theme_bw() + ggtitle("True largest effect: d = 1") + xlab("Number of groups")
ploteff2 <- data %>% filter(true_effect == 2 & distribution == "normal" & dsg == "bayes") %>%
group_by(delta, no_groups, n_per_group, distribution, type_of_comparison, true_effect) %>%
summarise(MSE = mean(squared_error)) %>%
ggplot(.) + geom_point(aes(x = no_groups, y = MSE), size = 1) +
facet_nested(n_per_group ~ delta, labeller = scenario_labeller) +
expand_limits(y=0) +
theme_bw() + ggtitle("True largest effect: d = 2") + xlab("Number of groups")
ggarrange(ploteff0, ploteff1, ploteff2, ncol=1)
ggsave(filename = "figures/SupplMater_Figure1.png", device = "png", width = 7, height = 8)
library(tidyverse)
library(future)
library(future.apply)
library(furrr)
library(rstan)
library(emmeans)
library(multcomp)
library(ggpubr)
library(ggh4x)
# load functions
source("sample_data.R")
source("find_best_comparison.R")
source("estimate_effect.R")
source("get_data.R")
source("simulation_wrapper.R")
# set up simulation
source("simulation_setup.R")
nsim <- 10
# run simulation (takes approximately 10 hours on Intel i7 11700k with 15 cores)
source("run_simulation.R")
# effect estimate distribution under null hypothesis
data %>%
filter(dsg == "standard" & true_effect == 0 & no_groups %in% c(2, 6, 10) & distribution == "normal") %>%
group_by(dsg, no_groups, n_per_group) %>%
#mutate(no_groups = as.factor(no_groups)) %>%
ggplot(.) + geom_histogram(aes(x = effect_est), bins = 100) + ylab("Number of simulations") + xlab("Effect estimate") +
facet_grid(no_groups ~ n_per_group, labeller = scenario_labeller2) + theme_bw()
# prepare data for visualization
source("data_manipulation.R")
# effect estimate distribution under null hypothesis
data %>%
filter(dsg == "standard" & true_effect == 0 & no_groups %in% c(2, 6, 10) & distribution == "normal") %>%
group_by(dsg, no_groups, n_per_group) %>%
#mutate(no_groups = as.factor(no_groups)) %>%
ggplot(.) + geom_histogram(aes(x = effect_est), bins = 100) + ylab("Number of simulations") + xlab("Effect estimate") +
facet_grid(no_groups ~ n_per_group, labeller = scenario_labeller2) + theme_bw()
# set up simulation for supplementary material
source("simulation_setup_supplementary_material.R")
nsim = 10
# run simulation for supplementary material (takes approximately 6 hours on Intel i7 11700k with 15 cores)
source("run_simulation_supplementary_material.R")
# load data (optional instead of running simulation)
data <- readRDS("data/simulated_data_2025-08-20.Rds")
# prepare data for visualization
source("data_manipulation.R")
# Figures
source("Figure_2.R")
source("Figure_3.R")
source("Figure_7.R")
source("Figure_8.R")
source("Figure_9.R")
source("Figure_10.R")
# set up simulation for supplementary material
source("simulation_setup_supplementary_material.R")
# load data (optional instead of running simulation)
main_data <- readRDS("data/simulated_data_2025-08-20.Rds")
data_supplementary_material <- readRDS("data/simulated_data_supplementary_material_2025-08-22.Rds")
# make figures for supplementary material
source("figures_supplementary_material.R")
getwd()
# effect estimate distribution under null hypothesis
data %>%
filter(dsg == "standard" & true_effect == 0 & no_groups %in% c(2, 6, 10) & distribution == "normal") %>%
group_by(dsg, no_groups, n_per_group) %>%
#mutate(no_groups = as.factor(no_groups)) %>%
ggplot(.) + geom_histogram(aes(x = effect_est), bins = 100) + ylab("Number of simulations") + xlab("Effect estimate") +
facet_grid(no_groups ~ n_per_group, labeller = scenario_labeller2) + theme_bw()
ggsave(filename = "figures/Figure 2.png", device = "png", width = 7, height = 2.5)
ggsave(filename = "Figure 2.png", device = "png", width = 7, height = 2.5)
ggsave(path = "figures", filename = "Figure 2.png", device = "png", width = 7, height = 2.5)
ggsave(path = "figures", filename = "Figure 2.png", device = "png", width = 7, height = 2.5)
# confidence interval distribution
data %>%
filter(dsg == "standard" & true_effect == 0 & no_groups %in% c(2, 6, 10) & distribution == "normal") %>%
group_by(no_groups, n_per_group) %>%
arrange(CI_lwr) %>%
mutate(rowid = 1:n()) %>% ungroup() %>%
mutate(CI_excludes_0 = case_when(CI_lwr < 0 & CI_upr > 0 ~ FALSE, TRUE ~ TRUE)) %>%
mutate(CI_excludes_0f = factor(CI_excludes_0, levels = c(TRUE, FALSE)),
length_CI = CI_upr - CI_lwr) %>%
ggplot(.) + geom_errorbar(aes(y = rowid, xmin = CI_lwr, xmax = CI_upr, colour = CI_excludes_0f)) +
scale_color_manual(values = c("red4", "grey50"), guide = "none") +
facet_grid(no_groups ~ n_per_group, labeller = scenario_labeller2) +
xlab("Effect estimate") + theme_bw() +
geom_vline(xintercept = 0, linetype = "dashed") +
theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) +
geom_text(aes(x = -3, y = 9000, label = coverage), size = 2.5,
data = . %>% group_by(no_groups, n_per_group) %>%
summarise(coverage = round(sum(!CI_excludes_0)/n(),2)) %>%
mutate(coverage = paste0("CP: ", coverage))
) +
geom_text(aes(x = -3, y = 7000, label = al), size = 2.5,
data = . %>% group_by(no_groups, n_per_group) %>%
summarise(al = round(mean(length_CI),2)) %>%
mutate(al = paste0("AL: ", al))
)
ggsave(filename = "figures/Figure 3.png", device = "png", width = 7, height = 2.5)
source("Figure_7.R")
source("Figure_8.R")
source("Figure_9.R")
source("Figure_10.R")
# set up simulation for supplementary material
source("simulation_setup_supplementary_material.R")
main_data <- readRDS("data/simulated_data_2025-08-20.Rds")
data_supplementary_material <- readRDS("data/simulated_data_supplementary_material_2025-08-22.Rds")
# make figures for supplementary material
source("figures_supplementary_material.R")
